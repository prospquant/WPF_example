<UserControl x:Class="ProximaTrader.Module.Tables.Tables.MarketAnalyzer.MarketAnalyzerControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:prism="http://prismlibrary.com/"
			 xmlns:helper="clr-namespace:ProximaTrader.Infrastructure.Helpers_WPF;assembly=ProximaTrader.Infrastructure"
             xmlns:help="clr-namespace:ProximaTrader.WPF.Helpers.Classes_For_Controls;assembly=ProximaTrader.WPF.Helpers"
             prism:ViewModelLocator.AutoWireViewModel="True" 
             xmlns:local="clr-namespace:ProximaTrader.Module.Tables.Tables.MarketAnalyzer"
			 xmlns:lex="http://wpflocalizeextension.codeplex.com"
             lex:LocalizeDictionary.DesignCulture="ru"
             lex:ResxLocalizationProvider.DefaultAssembly="ProximaTrader.Styles"
             lex:ResxLocalizationProvider.DefaultDictionary="Strings"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=local:MarketAnalyzerControlViewModel, IsDesignTimeCreatable=False}"
             d:DesignHeight="450" d:DesignWidth="1200">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/ProximaTrader.Styles;component/DataGridStyle.xaml"></ResourceDictionary>
                <ResourceDictionary Source="/ProximaTrader.Styles;component/MainStyles.xaml"></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <help:PositionValueColorConverter x:Key="PositionColorConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Background="{StaticResource MainBackGroundColor}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Border BorderBrush="Black" BorderThickness="1 0 1 1">
            <StackPanel Orientation="Horizontal" Height="30">
                <Button x:Name="PlusButton" Style="{StaticResource MarketAnalyzerButtonStyle}" Width="100"
                    Content="{lex:Loc ma_add}" Command="{Binding OpenPopupCommand}"/>
                <Popup StaysOpen="False" IsOpen="{Binding IsOpenPopup, Mode=TwoWay}"
                   PopupAnimation="Scroll" Placement="Bottom" PlacementTarget="{Binding ElementName=PlusButton}">
                    <helper:ExchangeSymbolFilter DataContext="{Binding ViewModel}" />
                </Popup>
                <Button Style="{StaticResource MarketAnalyzerButtonStyle}" Width="100"
                        Content="{lex:Loc ma_up}" Command="{Binding MoveUpCommand}"/>
                <Button Style="{StaticResource MarketAnalyzerButtonStyle}" Width="100"
                        Content="{lex:Loc ma_down}" Command="{Binding MoveDownCommand}"/>
                <Button Style="{StaticResource MarketAnalyzerButtonStyle}" Width="100"
                        Content="{lex:Loc ma_rem}" Command="{Binding RemoveCommand}"/>
                <Button Style="{StaticResource MarketAnalyzerButtonStyle}" Width="100"
                        Content="{lex:Loc ma_remAll}" Command="{Binding ClearCommand}"/>
            </StackPanel>
        </Border>
        <DataGrid Background="{StaticResource MainBackGroundColor}" Grid.ColumnSpan="6" Grid.Row="2" CanUserAddRows="false"
                  RowHeaderWidth="0" HeadersVisibility="All" GridLinesVisibility="None" AutoGenerateColumns="False"
                  ItemsSource="{Binding Tickers}" x:Name="MarketAnalyzerGrid" AlternationCount="2"
                  SelectedItem="{Binding SelectedTicker, UpdateSourceTrigger=PropertyChanged}"
                  SelectionUnit="FullRow" SelectionMode="Single" HorizontalScrollBarVisibility="Hidden" 
                  VerticalScrollBarVisibility="Auto" Margin="10 0" Style="{StaticResource DataGridRowStyle}">
            <DataGrid.Columns>
                <DataGridTextColumn Width="0.1*" Header="{lex:Loc common_ExchangeLbl}" IsReadOnly="True" CanUserSort="False"
                                    Binding="{Binding Path=Exchange, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Width="0.1*" Header="{lex:Loc common_SymbolLbl}" IsReadOnly="True" CanUserSort="False"
                                    Binding="{Binding Path=Pair, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Width="0.1*" Header="{lex:Loc common_OpenInterestLbl}" IsReadOnly="True" CanUserSort="False"
                                    Binding="{Binding Path=OpenInterest, UpdateSourceTrigger=PropertyChanged, TargetNullValue=''}"/>
                <DataGridTextColumn Width="0.1*" Header="{lex:Loc common_AskPriceLbl}" IsReadOnly="True" CanUserSort="False"
                                    Binding="{Binding Path=Ask, UpdateSourceTrigger=PropertyChanged, TargetNullValue=''}"/>
                <DataGridTextColumn Width="0.1*" Header="{lex:Loc common_BidPriceLbl}" IsReadOnly="True" CanUserSort="False"
                                    Binding="{Binding Path=Bid, UpdateSourceTrigger=PropertyChanged, TargetNullValue=''}"/>
                <DataGridTextColumn Width="0.1*" Header="{lex:Loc common_LastTradeLbl}" IsReadOnly="True" CanUserSort="False"
                                    Binding="{Binding Path=LastTrade, UpdateSourceTrigger=PropertyChanged, TargetNullValue=''}"/>
                <DataGridTemplateColumn Width="0.1*" Header="{lex:Loc common_PercentChangeLbl}" IsReadOnly="True" CanUserSort="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Style="{StaticResource MainTextBlockStyle}" Text="{Binding PercentChange}" 
                                           HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="12" Margin="5"
                                           Foreground="{Binding Path=PercentChange, Converter={StaticResource PositionColorConverter}}" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Width="0.1*" Header="{lex:Loc common_MaxPrice24hLbl}" IsReadOnly="True" CanUserSort="False"
                                    Binding="{Binding Path=MaxPrice24h, UpdateSourceTrigger=PropertyChanged, TargetNullValue=''}"/>
                <DataGridTextColumn Width="0.1*" Header="{lex:Loc common_MinPrice24hLbl}" IsReadOnly="True" CanUserSort="False"
                                    Binding="{Binding Path=MinPrice24h, UpdateSourceTrigger=PropertyChanged, TargetNullValue=''}"/>
                <DataGridTextColumn Width="0.1*" Header="{lex:Loc common_VolumeLbl}" IsReadOnly="True" CanUserSort="False"
                                    Binding="{Binding Path=Volume, UpdateSourceTrigger=PropertyChanged, TargetNullValue=''}"/>
                <DataGridTextColumn Width="0.1*" Header="{lex:Loc common_Volume24hLbl}" IsReadOnly="True" CanUserSort="False"
                                    Binding="{Binding Path=Volume24h, UpdateSourceTrigger=PropertyChanged, TargetNullValue=''}"/>
                <DataGridTextColumn Width="0.1*" Header="{lex:Loc common_PriceStepLbl}" IsReadOnly="True" CanUserSort="False"
                                    Binding="{Binding Path=PriceStep, UpdateSourceTrigger=PropertyChanged, TargetNullValue=''}"/>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
