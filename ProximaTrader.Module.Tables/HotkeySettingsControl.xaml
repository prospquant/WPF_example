<UserControl x:Class="ProximaTrader.Settings.HotkeySettingsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:help="clr-namespace:ProximaTrader.WPF.Helpers.Classes_For_Controls;assembly=ProximaTrader.WPF.Helpers"
             xmlns:local="clr-namespace:ProximaTrader.Settings"
			 xmlns:lex="http://wpflocalizeextension.codeplex.com"
             lex:LocalizeDictionary.DesignCulture="ru"
             lex:ResxLocalizationProvider.DefaultAssembly="ProximaTrader.Styles"
             lex:ResxLocalizationProvider.DefaultDictionary="Strings"
             d:DataContext="{d:DesignInstance Type=local:HotkeySettingsControlViewModel, IsDesignTimeCreatable=True}"
             mc:Ignorable="d" 
             d:DesignHeight="650" d:DesignWidth="500">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/ProximaTrader.Styles;component/DataGridStyle.xaml"></ResourceDictionary>
                <ResourceDictionary Source="/ProximaTrader.Styles;component/MainStyles.xaml"></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <help:ConverterBooleanVisibility x:Key="ConverterBooleanVisibility"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Background="{StaticResource MainBackGroundColor}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="60"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" MinWidth="130"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="2*" MinWidth="250"/>
        </Grid.ColumnDefinitions>
        <Border Background="{StaticResource MainMenuColor}">
            <Border>
                <TextBlock Text="{lex:Loc settings_GeneralLbl}" Style="{StaticResource MainTextBlockStyle}" x:Name="MainLabel" Margin="10">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown">
                        <i:InvokeCommandAction Command="{Binding ApplyFilterCommand}" CommandParameter="General"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                </TextBlock>
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource MainHoverColor}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
        </Border>
        <Border Background="{StaticResource MainMenuColor}" Grid.Row="1" />
            <!--<TextBlock Text="Order entry" Style="{StaticResource MainTextBlockStyleUnderline}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown">
                        <i:InvokeCommandAction Command="{Binding ApplyFilterCommand}" CommandParameter="OrderEntry"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBlock>
            <TextBlock Text="Classic DOM" Style="{StaticResource MainTextBlockStyleUnderline}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown">
                        <i:InvokeCommandAction Command="{Binding ApplyFilterCommand}" CommandParameter="ClassicDom"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBlock>
            <TextBlock Text="Scalping DOM" Style="{StaticResource MainTextBlockStyleUnderline}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown">
                        <i:InvokeCommandAction Command="{Binding ApplyFilterCommand}" CommandParameter="ScalpingDom"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBlock>
            <TextBlock Text="Chart" Style="{StaticResource MainTextBlockStyleUnderline}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown">
                        <i:InvokeCommandAction Command="{Binding ApplyFilterCommand}" CommandParameter="Chart"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBlock>-->
        <Border BorderBrush="#333333" BorderThickness="1 0 0 0" Background="{StaticResource MainBackGroundColor}" 
                Grid.Column="2" Grid.RowSpan="2" Height="Auto">
            <ItemsControl ItemsSource="{Binding HotKeyCommands, UpdateSourceTrigger=PropertyChanged}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid MaxHeight="30" Height="30">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1.4*"/>
                                <ColumnDefinition Width="1.3*"/>
                                <ColumnDefinition Width="0.6*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Style="{StaticResource MainTextBlockStyle}" VerticalAlignment="Center"
                                       Text="{Binding CommandName}" Margin="10 2"/>
                            <TextBox Grid.Column="1" Text="{Binding Representation, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                 Style="{StaticResource MainGreyTextBox}" Margin="3" VerticalContentAlignment="Center"
                                 IsReadOnlyCaretVisible="True" IsReadOnly="True">
                                <i:Interaction.Behaviors>
                                    <help:KeyUpWithArgsBehavior KeyUpCommand="{Binding KeyUpCommand}" />
                                </i:Interaction.Behaviors>
                            </TextBox>
                            <Grid Grid.Column="2" Margin="3" Visibility="{Binding WithStepOffset, UpdateSourceTrigger=PropertyChanged, 
                                Converter={StaticResource ConverterBooleanVisibility}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBox Grid.RowSpan="2" VerticalContentAlignment="Center"
                                         Text="{Binding PriceOffsetCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                         Style="{StaticResource MainGreyTextBox}" IsReadOnlyCaretVisible="True" IsReadOnly="True" />
                                <Button Grid.Row="0" Grid.Column="1" Style="{StaticResource LogButtonStyle}" FontSize="6.5"
                                    Margin="0" Content="⯅" Command="{Binding StepUpCommand}"/>
                                <Button Grid.Row="1" Grid.Column="1" Style="{StaticResource LogButtonStyle}" FontSize="6.5"
                                    Margin="0" Content="⯆" Command="{Binding StepDownCommand}"/>
                            </Grid>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Border>
        <Border Grid.Row="2" Grid.ColumnSpan="3" BorderBrush="#333333" BorderThickness="0 1 0 0">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Grid.Column="2" Content="{lex:Loc settings_ApplyLbl}" 
                        Command="{Binding SaveCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                        Style="{StaticResource MainGreyButton}" />
                <Button Grid.Column="3" Content="{lex:Loc common_cancelLbl}" Margin="15 0 10 0"
                        Command="{Binding Path=ExitCommand}" 
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                        Style="{StaticResource MainGreyButton}" />
            </StackPanel>
        </Border>
    </Grid>
</UserControl>
